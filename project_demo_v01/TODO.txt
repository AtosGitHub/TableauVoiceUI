TODO


------------------------------------------------------------------------------------------
4:Apr 19, 2017 problem from 'debugging.txt'

	-Implement a data structure for tracking duplicate values in fields of current tab and then prompt user to specify which field to apply filter value.

    -Remove words from the command as they are recognized until we have only the filter value left. Then when we search it for legal filter values, we could put the constraint that the legal value be > 50% of what is left in the command by word count (e.g. 'Island' is exactly 50% of 'Rhode Island' so it won't match, but "Chicago O'Hare" and "Chicago International" are > 50% of "Chicago O'Hare International" which would match.


------------------------------------------------------------------------------------------
Range Filter for Tableau

// prototype
function rangeFilter(field, range){
	...
	worksheet.applyRangeFilterAsync(fieldName: string, range: RangeFilterOptions);
	
}

API specification
{
	applyRangeFilterAsync( 
	fieldName: string, 
	range: RangeFilterOptions)

		returns Promise<string>

	Applies a quantitative filter to a field or to a date. If a range is specified that is outside of the domain min/max values, no error is raised and the command is allowed. Subsequent calls to getFiltersAsync[] will return these values even if they are outside of the bounds of the domain. This is equivalent to the behavior in Tableau Desktop.
}


------------------------------------------------------------------------------------------
Reset All Filters in Current Tab

-will need to loop through fields in current sheet and and clear each individually


------------------------------------------------------------------------------------------
Determine cause of speech recognition timeout in Chrome and restart it when it happens.


------------------------------------------------------------------------------------------
pauseAutomaticUpdatesAsync()
resumeAutomaticUpdatesAsync()
toggleAutomaticUpdatesAsync()






------------------------------------------------------------------------------------------
workbook.getActiveCustomView()

	-save current state, and possibly last few states to support 'undo'











------------------------------------------------------------------------------------------










------------------------------------------------------------------------------------------